VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR a
COMMA ,
IDENFR b
<变量定义>
SEMICN ;
<变量说明>
IDENFR a
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR b
ASSIGN =
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
WHILETK while
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
LSS <
IDENFR b
<因子>
<项>
<表达式>
<条件>
RPARENT )
IDENFR a
ASSIGN =
IDENFR a
<因子>
DIV /
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<循环语句>
<语句>
WHILETK while
LPARENT (
IDENFR a
<因子>
<项>
PLUS +
IDENFR b
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
IDENFR a
<因子>
MULT *
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR b
ASSIGN =
IDENFR b
<因子>
DIV /
IDENFR a
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
DOTK do
LBRACE {
IDENFR a
ASSIGN =
IDENFR a
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
WHILETK while
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
NEQ !=
IDENFR b
<因子>
<项>
<表达式>
<条件>
RPARENT )
<循环语句>
<语句>
SEMICN ;
<语句>
FORTK for
LPARENT (
IDENFR a
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
PLUS +
INTCON 2
<无符号整数>
<整数>
<因子>
MULT *
IDENFR b
<因子>
<项>
<表达式>
SEMICN ;
IDENFR b
<因子>
<项>
<表达式>
LEQ <=
INTCON 100
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR a
ASSIGN =
IDENFR a
PLUS +
INTCON 10
<无符号整数>
<步长>
RPARENT )
LBRACE {
IDENFR a
ASSIGN =
IDENFR a
<因子>
<项>
PLUS +
INTCON 20
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR b
ASSIGN =
IDENFR b
<因子>
<项>
PLUS +
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR b
ASSIGN =
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR a
<因子>
MULT *
IDENFR b
<因子>
<项>
PLUS +
IDENFR a
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR b
ASSIGN =
IDENFR b
MINU -
INTCON 1
<无符号整数>
<步长>
RPARENT )
PRINTFTK printf
LPARENT (
IDENFR a
<因子>
MULT *
IDENFR a
<因子>
<项>
PLUS +
IDENFR b
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<循环语句>
<语句>
RETURNTK return
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<主函数>
<程序>
